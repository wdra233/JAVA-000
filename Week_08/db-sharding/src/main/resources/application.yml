spring:

  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      names: ds0,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.56.10:3326/ds_0?useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.56.10:3327/ds_1?useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root

    sharding:
      tables:
        ## logic table name t_order
        t_order:
          actualDataNodes: ds0.t_order_${[0,2,4,6,8,10,12,14]},ds1.t_order_${[1,3,5,7,9,11,13,15]}
          ## configure snowflake algorithm to generate id
          keyGenerator:
            column: id
            type: SNOWFLAKE
            props:
              worker-id: 100
              max-tolerate-time-difference-millisecond: 60000
              max-vibration-offset: 15
          databaseStrategy:
            inline:
              shardingColumn: id
              algorithmExpression: ds${id % 2}
          tableStrategy:
            inline:
              shardingColumn: id
              algorithmExpression: t_order_${id % 16}

  datasource:
    schema: classpath:schema.sql
    initialization-mode: always





